rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS collection
    match /users/{userId} {
      // Anyone can read a user's public profile (username, bio)
      allow get: if true;
      
      // A user can create their own profile during signup
      allow create: if isOwner(userId);

      // A user can only update their own bio
      allow update: if isOwner(userId) && request.resource.data.keys().hasOnly(['bio']);

      // A user cannot delete their profile through the client
      allow delete: if false;

      // NOTES sub-collection
      match /notes/{noteId} {
        // A user can perform any action on their own notes
        allow read, write, delete: if isOwner(userId);
      }
    }

    // QUESTIONS collection
    match /questions/{questionId} {
      // Anyone can create (ask) a question
      allow create: if true;

      // Only the recipient can read a question before it's answered
      allow read: if resource.data.isAnswered == true || isOwner(resource.data.toUserId);

      // The recipient can update a question (to answer it)
      allow update: if isOwner(resource.data.toUserId);
      
      // The recipient can delete a question
      allow delete: if isOwner(resource.data.toUserId);
    }
  }
}
